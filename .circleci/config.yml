# Use the latest 2.1 version of CircleCI pipeline process engine. See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1
# Orchestrate or schedule a set of jobs
orbs:
  aws-cli: circleci/aws-cli@2.0.2
commands:
  print_pipeline_id:
    steps:
      - run: echo "[all]" >inventory
jobs:
  destroy_environments:
    executor: aws-cli/default
    steps:
      - run: aws cloudformation delete-stack --stack-name prod-${CIRCLE_WORKFLOW_ID} 
  create_infrastructure:
    executor: aws-cli/default
    steps:
      - checkout
      - aws-cli/setup:
          profile-name: example
      - run: aws cloudformation create-stack --stack-name prod-${CIRCLE_WORKFLOW_ID} --template-body file://template.yml
      - run: aws ec2 describe-instances  --query 'Reservations[*].Instances[*].PublicIpAddress'  --filters "Name=tag:Name,Values=Balakrishna Avula" --output text >> inventory
      - persist_to_workspace:
          root: /home/circleci/project
          paths:
              - inventory
      - run: cat inventory
  configure_infrastructure:
    docker: 
      - image: python:3.7-alpine3.11
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: |
            apk add --update ansible # install the dependencies needed for your playbook
      - add_ssh_keys:
          fingerprints:
            - "fe:ac:75:14:e3:81:6b:69:f9:2b:01:ba:5d:81:b4:b9"
            - "fb:d3:a8:e8:e0:8b:f6:e5:46:4c:d6:c4:ad:a2:e6:5b"
      - run: echo ec2-34-221-206-69.us-west-2.compute.amazonaws.com ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDDsGnDK18TSBxOWZZbR0XM1bo4lpT7Iz2bVnqkfyWKfjtnvsPbEH6tSYRN3kH4yhBjuIA5MxEUPsK3bpgQHZH7gdiFbPzKMcnvgS4/BYhTwxOgSWTsySMFgng8M2M4Nqo8xZeEkwVaM2OSyHtO9sJVDPgM+UNYgz9tMb+0XFjhfSuLG9nyqUdC6Id8Mf37b50cDt02kwGHlyh9R3y5yl4UXYYchmXLxoVHKoZ+XgwBTjH0/S3KD9W5GgkQWlOoTv1+DJ73Kna3de/uqXim2yTvMRp15jO799j+n+LiAucm48aA0UPHphYJn7mzNKNG9BsqtixZzFxdtuf+178cXGcVWdHVYCuNvYrK0QLrLGDO8IMDlblH5wPkXYpeli2H4uS/g6nJ8OS1RW6Bg5BPAKToXXKzQY4eS+5G8YTWpqm5Uz+AMlkNlpBABvx4mfXEmiDwORlTsuHneHrW5yRg+g3uXj0G8uuLLrRsnihsS7eqbzMi3hUIZ9WPuZjIwRFpKgU= >>~/.ssh/known_hosts
      - run: ansible-playbook -i inventory main_remote.yml
  test_inf:
    docker: 
      - image: curlimages/curl
    steps:
      - run: curl -s --head "https://google.com"
      - run: curl -s --head "https://kantkapalem.com"
      - destroy_environments
          when: on_fail
workflows:
  udacity:
    jobs:
      - create_infrastructure
      - configure_infrastructure
      - test_inf
      - destroy_envrionments
